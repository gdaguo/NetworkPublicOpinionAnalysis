buildscript { // buildscript 不能抽取出来，只能重复写。
    ext{
        sxGradleHome = "http://192.168.120.68/root/gradle-scripts/raw/master/"
        //sxGradleHome ="https://raw.githubusercontent.com/iSayCheese/gradle-scripts/master/"
    }
    apply from: sxGradleHome + "maven.gradle"
    apply from: sxGradleHome + "spring-cloud-greenwich.gradle" // 导入使用Spring Cloud及相应的Spring Boot版本号
    repositories {
        maven { url REPOSITORY_URL }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:2.0.0")
    }
}

subprojects {
    // 参考 http://192.168.120.68/root/gradle-scripts
    apply from: sxGradleHome + "maven.gradle"
    apply from: sxGradleHome + "spring-cloud2.gradle"

    version = "1.0.0-SNAPSHOT"  // 开发版本： -SNAPSHOT 正式版本：.RELEASE
    group = "com.ssg"
    description = "spring boot in action"

    dependencies {

        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
        compileOnly("org.springframework.boot:spring-boot-configuration-processor")

        annotationProcessor("org.projectlombok:lombok")
        compileOnly("org.projectlombok:lombok")
        testCompile("org.projectlombok:lombok")
    }
    bootJar{
        enabled=true
    }
}
//implementation 所依赖的库仅可在当前module使用，编译速度快
//compile 所依赖的库可在整工程使用，编译速度较implementation慢
//compileOnly 仅在编译时有效，不参与打包，一般在发布no jar的库时候会用到，很少用
//runtimeOnly 仅在生成apk的时候参与打包，编译时不参与
//testCompile 仅在单元测试代码的编译以及最终打包测试apk时有效
//debugCompile 仅在debug模式的编译和最终的debug apk打包时有效
//releaseCompile 仅在Release模式的编译和最终的Release apk打包时有效